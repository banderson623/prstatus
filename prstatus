#!/usr/bin/env bash

## Enter your OAuth token here to avoid having
## to re-enter in the command line every time
token="fb9a994e5b8291b0291d8a2e86c0bca8d58f1723"



#####################################
### DO NOT EDIT BEYOND THIS POINT ###
#####################################

# FORMATTING
_bold=$(tput bold) 
_reset=$(tput sgr0)


# Argument evaluation
function arg_check {
  if [ -z "$token" ]; then
    echo -e "${_bold}ERROR: OAuth token not specified (required)${_reset}\n"
    show_help
    exit
  fi

  if [ -z "$repo" ]; then
    echo -e "${_bold}ERROR: Repository not specified (required)${_reset}\n"
    show_help
    exit
  fi

  if [ -z "$prid" ]; then
    api_call="repos$target/$repo/pulls"
  else
    api_call="repos$target/$repo/pulls/$prid"
  fi
}


# USAGE HELP
show_help() {
  cat << EOF
Usage: $0 [-dh] [-t TOKEN] [-r REPO]...
Options:
    -h | --help                 display this syntax information and exit
    -d | --debug                display API request details and exit
    -t | --token TOKEN          OAuth token ${_bold}(required)${_reset}
                                  More info: http://git.io/vmNUX
                                  Example:  $0 -t e72e16c7e42f292c6912e7710c8
    -r | --repo USER/REPO       Target repository ${_bold}(required)${_reset}
                                  Note: specify repo\'s owner username OR organization
                                  Example:  $0 -r reddit/reddit
                                            $0 -r levifig/prstatus
    -p | --pullrequest ID       Specify unique pull request by its ID
                                  Example:  $0 -p 1449
EOF
}


# API REQUEST
function request {
  arg_check

  # DEBUG: show parsed arguments and exit
  # TODO: show "nil" for empty arguments
  if [ "$debug" == true ]; then
    echo " ===== Repo set to: $repo"
    echo " ===== PR set to: $prid"
    echo " ===== API call set to: $api_call"
    echo " ===== Auth token set to: $token"

    exit
  fi
  
  curl -s \
    -G "https://api.github.com/$api_call?$params" \
    -H "Authorization: token $token"
}


# ARGUMENT PARSING
while :; do
  case $1 in
    -r | --repo )
      repo="$2"
      shift
      ;;
    -p | --pullrequest )
      prid="$2"
      shift
      ;;
    -t | --token )
      token="$2"
      shift
      ;;
    -d | --debug )
      debug=true
      shift
      ;;
    -h |--help | -\? )
      show_help
      exit
      ;;
    * )
      # No more arguments to parse
      break
  esac
  shift
done

request
